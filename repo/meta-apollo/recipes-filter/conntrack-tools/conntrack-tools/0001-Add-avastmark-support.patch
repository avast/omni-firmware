From 6b8a023146a43f6a352465ae78b52033b4e916d6 Mon Sep 17 00:00:00 2001
From: Vladyslav Movchan <vladyslav.movchan@avast.com>
Date: Thu, 24 Sep 2020 10:24:32 +0200
Subject: [PATCH] Add avastmark support

---
 conntrack.8                               |   7 ++
 include/conntrack.h                       |   2 +-
 include/linux/netfilter/nfnetlink_queue.h |   4 +
 include/network.h                         |   1 +
 src/build.c                               |   2 +
 src/conntrack.c                           | 107 +++++++++++++++++-----
 src/parse.c                               |   5 +
 tests/conntrack/testsuite/02filter        |   7 ++
 tests/conntrack/testsuite/08avastmark     |  27 ++++++
 9 files changed, 138 insertions(+), 24 deletions(-)
 create mode 100644 tests/conntrack/testsuite/08avastmark

diff --git a/conntrack.8 b/conntrack.8
index 1174c6c..cf09118 100644
--- a/conntrack.8
+++ b/conntrack.8
@@ -172,6 +172,13 @@ XORing the MARK value into the ctmark.
 Otherwise, the mask is logically ANDed with the existing mark before the
 comparision. In "\-\-create" mode, the mask is ignored.
 .TP
+.BI "-A, --avastmark " "MARK[/MASK]"
+Specify the conntrack avastmark.  Optionally, a mask value can be specified.
+In "\-\-update" mode, this mask specifies the bits that should be zeroed before XORing
+the MARK value into the ctavastmark.
+Otherwise, the mask is logically ANDed with the existing mark before the comparision.
+In "\-\-create" mode, the mask is ignored.
+.TP
 .BI "-l, --label " "LABEL"
 Specify a conntrack label.
 This option is only available in conjunction with "\-L, \-\-dump",
diff --git a/include/conntrack.h b/include/conntrack.h
index 37ccf6e..56d6cfb 100644
--- a/include/conntrack.h
+++ b/include/conntrack.h
@@ -9,7 +9,7 @@
 #include <netinet/in.h>
 
 #define NUMBER_OF_CMD   19
-#define NUMBER_OF_OPT   29
+#define NUMBER_OF_OPT   30
 
 struct nf_conntrack;
 
diff --git a/include/linux/netfilter/nfnetlink_queue.h b/include/linux/netfilter/nfnetlink_queue.h
index 8dd819e..a1b7347 100644
--- a/include/linux/netfilter/nfnetlink_queue.h
+++ b/include/linux/netfilter/nfnetlink_queue.h
@@ -49,6 +49,10 @@ enum nfqnl_attr_type {
 	NFQA_EXP,			/* nf_conntrack_netlink.h */
 	NFQA_UID,			/* __u32 sk uid */
 	NFQA_GID,			/* __u32 sk gid */
+	NFQA_SECCTX,			/* security context string */
+	NFQA_VLAN,			/* nested attribute: packet vlan info */
+	NFQA_L2HDR,			/* full L2 header */
+	NFQA_AVASTMARK,			/* __u32 nfmark */
 
 	__NFQA_MAX
 };
diff --git a/include/network.h b/include/network.h
index 95aad82..6ccc084 100644
--- a/include/network.h
+++ b/include/network.h
@@ -232,6 +232,7 @@ enum nta_attr {
 	NTA_SNAT_IPV6,		/* uint32_t * 4 */
 	NTA_DNAT_IPV6,		/* uint32_t * 4 */
 	NTA_SYNPROXY,		/* struct nft_attr_synproxy */
+	NTA_AVASTMARK,		/* uint32_t */
 	NTA_MAX
 };
 
diff --git a/src/build.c b/src/build.c
index 99ff230..b7f4fff 100644
--- a/src/build.c
+++ b/src/build.c
@@ -253,6 +253,8 @@ void ct2msg(const struct nf_conntrack *ct, struct nethdr *n)
 		ct_build_u32(ct, ATTR_TIMEOUT, n, NTA_TIMEOUT);
 	if (nfct_attr_is_set(ct, ATTR_MARK))
 		ct_build_u32(ct, ATTR_MARK, n, NTA_MARK);
+	if (nfct_attr_is_set(ct, ATTR_AVASTMARK))
+		ct_build_u32(ct, ATTR_AVASTMARK, n, NTA_AVASTMARK);
 
 	/* setup the master conntrack */
 	if (nfct_attr_grp_is_set(ct, ATTR_GRP_MASTER_IPV4)) {
diff --git a/src/conntrack.c b/src/conntrack.c
index f65926b..dce6ada 100644
--- a/src/conntrack.c
+++ b/src/conntrack.c
@@ -84,10 +84,13 @@ static struct {
 
 	/* Allows filtering/setting specific bits in the ctmark */
 	struct u32_mask mark;
+	struct u32_mask avastmark;
 
 	/* Allow to filter by mark from kernel-space. */
 	struct nfct_filter_dump_mark filter_mark_kernel;
+	struct nfct_filter_dump_mark filter_avastmark_kernel;
 	bool filter_mark_kernel_set;
+	bool filter_avastmark_kernel_set;
 
 	/* Allows filtering by ctlabels */
 	struct nfct_bitmask *label;
@@ -104,6 +107,7 @@ static int alloc_tmpl_objects(void)
 	tmpl.exp = nfexp_new();
 
 	memset(&tmpl.mark, 0, sizeof(tmpl.mark));
+	memset(&tmpl.avastmark, 0, sizeof(tmpl.avastmark));
 
 	return tmpl.ct != NULL && tmpl.exptuple != NULL &&
 	       tmpl.mask != NULL && tmpl.exp != NULL;
@@ -281,6 +285,9 @@ enum ct_options {
 
 	CT_OPT_REPL_ZONE_BIT	= 28,
 	CT_OPT_REPL_ZONE	= (1 << CT_OPT_REPL_ZONE_BIT),
+
+	CT_OPT_AVASTMARK_BIT	= 29,
+	CT_OPT_AVASTMARK	= (1 << CT_OPT_AVASTMARK_BIT),
 };
 /* If you add a new option, you have to update NUMBER_OF_OPT in conntrack.h */
 
@@ -288,7 +295,8 @@ enum ct_options {
 #define CT_COMPARISON (CT_OPT_PROTO | CT_OPT_ORIG | CT_OPT_REPL | \
 		       CT_OPT_MARK | CT_OPT_SECMARK |  CT_OPT_STATUS | \
 		       CT_OPT_ID | CT_OPT_ZONE | CT_OPT_LABEL | \
-		       CT_OPT_ORIG_ZONE | CT_OPT_REPL_ZONE)
+		       CT_OPT_ORIG_ZONE | CT_OPT_REPL_ZONE | \
+		       CT_OPT_AVASTMARK)
 
 static const char *optflags[NUMBER_OF_OPT] = {
 	[CT_OPT_ORIG_SRC_BIT] 	= "src",
@@ -320,6 +328,7 @@ static const char *optflags[NUMBER_OF_OPT] = {
 	[CT_OPT_DEL_LABEL_BIT]	= "label-del",
 	[CT_OPT_ORIG_ZONE_BIT]	= "orig-zone",
 	[CT_OPT_REPL_ZONE_BIT]	= "reply-zone",
+	[CT_OPT_AVASTMARK_BIT]	= "avastmark",
 };
 
 static struct option original_opts[] = {
@@ -351,6 +360,7 @@ static struct option original_opts[] = {
 	{"mask-dst", 1, 0, '}'},
 	{"nat-range", 1, 0, 'a'},	/* deprecated */
 	{"mark", 1, 0, 'm'},
+	{"avastmark", 1, 0, 'A'},
 	{"secmark", 1, 0, 'c'},
 	{"id", 2, 0, 'i'},		/* deprecated */
 	{"family", 1, 0, 'f'},
@@ -369,7 +379,7 @@ static struct option original_opts[] = {
 };
 
 static const char *getopt_str = ":L::I::U::D::G::E::F::hVs:d:r:q:"
-				"p:t:u:e:a:z[:]:{:}:m:i:f:o:n::"
+				"p:t:u:e:a:z[:]:{:}:m:A:i:f:o:n::"
 				"g::c:b:C::Sj::w:l:<:>::(:):";
 
 /* Table of legal combinations of commands and options.  If any of the
@@ -385,26 +395,26 @@ static const char *getopt_str = ":L::I::U::D::G::E::F::hVs:d:r:q:"
 static char commands_v_options[NUMBER_OF_CMD][NUMBER_OF_OPT] =
 /* Well, it's better than "Re: Linux vs FreeBSD" */
 {
-          /*   s d r q p t u z e [ ] { } a m i f n g o c b j w l < > ( ) */
-/*CT_LIST*/   {2,2,2,2,2,0,2,2,0,0,0,2,2,0,2,0,2,2,2,2,2,0,2,2,2,0,0,2,2},
-/*CT_CREATE*/ {3,3,3,3,1,1,2,0,0,0,0,0,0,2,2,0,0,2,2,0,0,0,0,2,0,2,0,2,2},
-/*CT_UPDATE*/ {2,2,2,2,2,2,2,0,0,0,0,2,2,0,2,2,2,2,2,2,0,0,0,0,2,2,2,0,0},
-/*CT_DELETE*/ {2,2,2,2,2,2,2,0,0,0,0,2,2,0,2,2,2,2,2,2,0,0,0,2,2,0,0,2,2},
-/*CT_GET*/    {3,3,3,3,1,0,0,0,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,0,2,0,0,0,0},
-/*CT_FLUSH*/  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
-/*CT_EVENT*/  {2,2,2,2,2,0,0,0,2,0,0,2,2,0,2,0,0,2,2,2,2,2,2,2,2,0,0,2,2},
-/*VERSION*/   {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
-/*HELP*/      {0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
-/*EXP_LIST*/  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,2,0,0,0,0,0,0,0,0,0},
-/*EXP_CREATE*/{1,1,2,2,1,1,2,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
-/*EXP_DELETE*/{1,1,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
-/*EXP_GET*/   {1,1,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
-/*EXP_FLUSH*/ {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
-/*EXP_EVENT*/ {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0},
-/*CT_COUNT*/  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
-/*EXP_COUNT*/ {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
-/*CT_STATS*/  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
-/*EXP_STATS*/ {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
+          /*   s d r q p t u z e [ ] { } a m i f n g o c b j w l < > ( ) A */
+/*CT_LIST*/   {2,2,2,2,2,0,2,2,0,0,0,2,2,0,2,0,2,2,2,2,2,0,2,2,2,0,0,2,2,2},
+/*CT_CREATE*/ {3,3,3,3,1,1,2,0,0,0,0,0,0,2,2,0,0,2,2,0,0,0,0,2,0,2,0,2,2,2},
+/*CT_UPDATE*/ {2,2,2,2,2,2,2,0,0,0,0,2,2,0,2,2,2,2,2,2,0,0,0,0,2,2,2,0,0,2},
+/*CT_DELETE*/ {2,2,2,2,2,2,2,0,0,0,0,2,2,0,2,2,2,2,2,2,0,0,0,2,2,0,0,2,2,2},
+/*CT_GET*/    {3,3,3,3,1,0,0,0,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,0,2,0,0,0,0,0},
+/*CT_FLUSH*/  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
+/*CT_EVENT*/  {2,2,2,2,2,0,0,0,2,0,0,2,2,0,2,0,0,2,2,2,2,2,2,2,2,0,0,2,2,2},
+/*VERSION*/   {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
+/*HELP*/      {0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
+/*EXP_LIST*/  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,2,0,0,0,0,0,0,0,0,0,0},
+/*EXP_CREATE*/{1,1,2,2,1,1,2,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
+/*EXP_DELETE*/{1,1,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
+/*EXP_GET*/   {1,1,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
+/*EXP_FLUSH*/ {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
+/*EXP_EVENT*/ {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0},
+/*CT_COUNT*/  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
+/*EXP_COUNT*/ {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
+/*CT_STATS*/  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
+/*EXP_STATS*/ {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
 };
 
 static const int cmd2type[][2] = {
@@ -432,6 +442,7 @@ static const int opt2type[] = {
 	['n']	= CT_OPT_SRC_NAT,
 	['g']	= CT_OPT_DST_NAT,
 	['m']	= CT_OPT_MARK,
+	['A']	= CT_OPT_AVASTMARK,
 	['c']	= CT_OPT_SECMARK,
 	['i']	= CT_OPT_ID,
 	['j']	= CT_OPT_ANY_NAT,
@@ -482,6 +493,7 @@ static const int opt2attr[] = {
 	['[']	= ATTR_ORIG_L3PROTO,
 	[']']	= ATTR_ORIG_L3PROTO,
 	['m']	= ATTR_MARK,
+	['A']	= ATTR_AVASTMARK,
 	['c']	= ATTR_SECMARK,
 	['i']	= ATTR_ID,
 	['w']	= ATTR_ZONE,
@@ -544,6 +556,7 @@ static const char usage_conntrack_parameters[] =
 	"  -g, --dst-nat ip\t\t\tdestination NAT ip\n"
 	"  -j, --any-nat ip\t\t\tsource or destination NAT ip\n"
 	"  -m, --mark mark\t\t\tSet mark\n"
+	"  -A, --avastmark mark\t\t\tSet avastmark\n"
 	"  -c, --secmark secmark\t\t\tSet selinux secmark\n"
 	"  -e, --event-mask eventmask\t\tEvent mask, eg. NEW,DESTROY\n"
 	"  -z, --zero \t\t\t\tZero counters while listing\n"
@@ -843,6 +856,12 @@ static int mark_cmp(const struct u32_mask *m, const struct nf_conntrack *ct)
 		(nfct_get_attr_u32(ct, ATTR_MARK) & m->mask) == m->value;
 }
 
+static int avastmark_cmp(const struct u32_mask *m, const struct nf_conntrack *ct)
+{
+	return nfct_attr_is_set(ct, ATTR_AVASTMARK) &&
+		(nfct_get_attr_u32(ct, ATTR_AVASTMARK) & m->mask) == m->value;
+}
+
 #define PARSE_STATUS 0
 #define PARSE_EVENT 1
 #define PARSE_OUTPUT 2
@@ -1235,7 +1254,16 @@ filter_mark(const struct nf_conntrack *ct)
 	return 0;
 }
 
-static int 
+static int
+filter_avastmark(const struct nf_conntrack *ct)
+{
+	if ((options & CT_OPT_AVASTMARK) &&
+	     !avastmark_cmp(&tmpl.avastmark, ct))
+		return 1;
+	return 0;
+}
+
+static int
 filter_nat(const struct nf_conntrack *obj, const struct nf_conntrack *ct)
 {
 	int check_srcnat = options & CT_OPT_SRC_NAT ? 1 : 0;
@@ -1380,6 +1408,7 @@ nfct_filter(struct nf_conntrack *obj, struct nf_conntrack *ct)
 {
 	if (filter_nat(obj, ct) ||
 	    filter_mark(ct) ||
+	    filter_avastmark(ct) ||
 	    filter_label(ct) ||
 	    filter_network(ct))
 		return 1;
@@ -1600,6 +1629,17 @@ static void copy_mark(struct nf_conntrack *tmp,
 	}
 }
 
+static void copy_avastmark(struct nf_conntrack *tmp,
+		      const struct nf_conntrack *ct,
+		      const struct u32_mask *m)
+{
+	if (options & CT_OPT_AVASTMARK) {
+		uint32_t mark = nfct_get_attr_u32(ct, ATTR_AVASTMARK);
+		mark = (mark & ~m->mask) ^ m->value;
+		nfct_set_attr_u32(tmp, ATTR_AVASTMARK, mark);
+	}
+}
+
 static void copy_status(struct nf_conntrack *tmp, const struct nf_conntrack *ct)
 {
 	if (options & CT_OPT_STATUS) {
@@ -1704,6 +1744,7 @@ static int update_cb(enum nf_conntrack_msg_type type,
 	nfct_copy(tmp, ct, NFCT_CP_ORIG);
 	nfct_copy(tmp, obj, NFCT_CP_META);
 	copy_mark(tmp, ct, &tmpl.mark);
+	copy_avastmark(tmp, ct, &tmpl.avastmark);
 	copy_status(tmp, ct);
 	copy_label(tmp, ct);
 
@@ -2490,6 +2531,13 @@ int main(int argc, char *argv[])
 			tmpl.filter_mark_kernel.mask = tmpl.mark.mask;
 			tmpl.filter_mark_kernel_set = true;
 			break;
+		case 'A':
+			options |= opt2type[c];
+			parse_u32_mask(optarg, &tmpl.avastmark);
+			tmpl.filter_avastmark_kernel.val = tmpl.avastmark.value;
+			tmpl.filter_avastmark_kernel.mask = tmpl.avastmark.mask;
+			tmpl.filter_avastmark_kernel_set = true;
+			break;
 		case 'l':
 		case '<':
 		case '>':
@@ -2643,6 +2691,11 @@ int main(int argc, char *argv[])
 						  NFCT_FILTER_DUMP_MARK,
 						  &tmpl.filter_mark_kernel);
 		}
+		if (tmpl.filter_avastmark_kernel_set) {
+			nfct_filter_dump_set_attr(filter_dump,
+						  NFCT_FILTER_DUMP_AVASTMARK,
+						  &tmpl.filter_avastmark_kernel);
+		}
 		nfct_filter_dump_set_attr_u8(filter_dump,
 					     NFCT_FILTER_DUMP_L3NUM,
 					     family);
@@ -2687,6 +2740,9 @@ int main(int argc, char *argv[])
 		if (options & CT_OPT_MARK)
 			nfct_set_attr_u32(tmpl.ct, ATTR_MARK, tmpl.mark.value);
 
+		if (options & CT_OPT_AVASTMARK)
+			nfct_set_attr_u32(tmpl.ct, ATTR_AVASTMARK, tmpl.avastmark.value);
+
 		if (options & CT_OPT_ADD_LABEL)
 			nfct_set_attr(tmpl.ct, ATTR_CONNLABELS,
 					xnfct_bitmask_clone(tmpl.label_modify));
@@ -2749,6 +2805,11 @@ int main(int argc, char *argv[])
 						  NFCT_FILTER_DUMP_MARK,
 						  &tmpl.filter_mark_kernel);
 		}
+		if (tmpl.filter_avastmark_kernel_set) {
+			nfct_filter_dump_set_attr(filter_dump,
+						  NFCT_FILTER_DUMP_AVASTMARK,
+						  &tmpl.filter_avastmark_kernel);
+		}
 		nfct_filter_dump_set_attr_u8(filter_dump,
 					     NFCT_FILTER_DUMP_L3NUM,
 					     family);
diff --git a/src/parse.c b/src/parse.c
index 7e524ed..6a2fe8e 100644
--- a/src/parse.c
+++ b/src/parse.c
@@ -82,6 +82,11 @@ static struct ct_parser h[NTA_MAX] = {
 		.attr	= ATTR_MARK,
 		.size	= NTA_SIZE(sizeof(uint32_t)),
 	},
+	[NTA_AVASTMARK] = {
+		.parse	= ct_parse_u32,
+		.attr	= ATTR_AVASTMARK,
+		.size	= NTA_SIZE(sizeof(uint32_t)),
+	},
 	[NTA_TIMEOUT] = {
 		.parse	= ct_parse_u32,
 		.attr	= ATTR_TIMEOUT,
diff --git a/tests/conntrack/testsuite/02filter b/tests/conntrack/testsuite/02filter
index 91a75eb..7badc49 100644
--- a/tests/conntrack/testsuite/02filter
+++ b/tests/conntrack/testsuite/02filter
@@ -14,11 +14,18 @@ conntrack -L -p tcp --state LISTEN ; OK
 conntrack -U -s 1.1.1.1 -m 1 ; OK
 # filter by mark
 conntrack -L -m 1 ; OK
+# update avastmark of dummy conntrack
+conntrack -U -s 1.1.1.1 -A 2 ; OK
+# filter by avastmark
+conntrack -L -A 2 ; OK
 # filter by layer 3 protocol
 conntrack -L -f ipv4 ; OK
 # filter by mark
 conntrack -L --mark 0 ; OK
 conntrack -L --mark 0/0xffffffff; OK
+# filter by avastmark
+conntrack -L --avastmark 0 ; OK
+conntrack -L --avastmark 0/0xffffffff; OK
 # filter by netmask
 conntrack -L -s 1.1.1.0 --mask-src 255.255.255.0 -d 2.0.0.0 --mask-dst 255.0.0.0 ; OK
 conntrack -L -s 1.1.1.4/24 -d 2.3.4.5/8 ; OK
diff --git a/tests/conntrack/testsuite/08avastmark b/tests/conntrack/testsuite/08avastmark
new file mode 100644
index 0000000..2cb482e
--- /dev/null
+++ b/tests/conntrack/testsuite/08avastmark
@@ -0,0 +1,27 @@
+# create with a avastmark
+-I -s 1.1.1.1 -d 2.2.2.2 -p tcp --sport 10 --dport 20 --state LISTEN -u SEEN_REPLY -t 50 --avastmark 42 ; OK
+# find it again using avastmark
+-L -s 1.1.1.1 -d 2.2.2.2 -p tcp --sport 10 --dport 20 --avastmark 42 ; OK
+-L --avastmark 42; OK
+# ct already exists
+-I -s 1.1.1.1 -d 2.2.2.2 -p tcp --sport 10 --dport 20 --state LISTEN -u SEEN_REPLY -t 50 --avastmark 42/0xffffffff ; BAD
+# delete by avastmark
+-D -s 1.1.1.1 -d 2.2.2.2 -p tcp --sport 10 --dport 20 --avastmark 42/0xffffffff ; OK
+# try again after del
+-I -s 1.1.1.1 -d 2.2.2.2 -p tcp --sport 10 --dport 20 --state LISTEN -u SEEN_REPLY -t 50 --avastmark 417889/0xffffffff ; OK
+# delete by avastmark
+-D --avastmark 417889 ; OK
+-I -s 1.1.1.1 -d 2.2.2.2 -p tcp --sport 10 --dport 20 --state LISTEN -u SEEN_REPLY -t 50 --avastmark 0xffffffff ; OK
+# zap top 16.
+-U -s 1.1.1.1 -d 2.2.2.2 -p tcp --sport 10 --dport 20 --avastmark 0/0xffff0000 ; OK
+-L -s 1.1.1.1 -d 2.2.2.2 -p tcp --sport 10 --dport 20 --avastmark 0x0000ffff ; OK
+-U -s 1.1.1.1 -d 2.2.2.2 -p tcp --sport 10 --dport 20 --avastmark 42/0xffff ; OK
+-L -s 1.1.1.1 -d 2.2.2.2 -p tcp --sport 10 --dport 20 --avastmark 42/0x0000ffff ; OK
+-L -s 1.1.1.1 -d 2.2.2.2 -p tcp --sport 10 --dport 20 --avastmark 42/42 ; OK
+-L -s 1.1.1.1 -d 2.2.2.2 -p tcp --sport 10 --dport 20 --avastmark 2/2 ; OK
+-L -s 1.1.1.1 -d 2.2.2.2 -p tcp --sport 10 --dport 20 --avastmark 2/3 ; OK
+# OK, but no flow entries should be shown here:
+-L -s 1.1.1.1 -d 2.2.2.2 -p tcp --sport 10 --dport 20 --avastmark 2/0xf ; OK
+# BAD, because no updates done (avastmark is already 42).
+-U -s 1.1.1.1 -d 2.2.2.2 -p tcp --sport 10 --dport 20 --avastmark 42 ; BAD
+-D -s 1.1.1.1 -d 2.2.2.2 -p tcp --sport 10 --dport 20 --avastmark 42 ; OK
